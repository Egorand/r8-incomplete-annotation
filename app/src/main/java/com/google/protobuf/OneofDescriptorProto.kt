// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: google/protobuf/descriptor.proto
package com.google.protobuf

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.TagHandler
import com.squareup.wire.WireField
import kotlin.Int
import kotlin.String
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * Describes a oneof.
 */
data class OneofDescriptorProto(
  @field:WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#STRING") @JvmField val name:
      String? = null,
  @field:WireField(tag = 2, adapter = "com.google.protobuf.OneofOptions#ADAPTER") @JvmField
      val options: OneofOptions? = null,
  val unknownFields: ByteString = ByteString.EMPTY
) : AndroidMessage<OneofDescriptorProto, OneofDescriptorProto.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.name = name
    builder.options = options
    builder.addUnknownFields(unknownFields())
    return builder
  }

  class Builder : Message.Builder<OneofDescriptorProto, Builder>() {
    @JvmField
    var name: String? = null

    @JvmField
    var options: OneofOptions? = null

    fun name(name: String?): Builder {
      this.name = name
      return this
    }

    fun options(options: OneofOptions?): Builder {
      this.options = options
      return this
    }

    override fun build(): OneofDescriptorProto = OneofDescriptorProto(
      name = name,
      options = options,
      unknownFields = buildUnknownFields()
    )
  }

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<OneofDescriptorProto> = object : ProtoAdapter<OneofDescriptorProto>(
      FieldEncoding.LENGTH_DELIMITED, 
      OneofDescriptorProto::class.java
    ) {
      override fun encodedSize(value: OneofDescriptorProto): Int = 
        ProtoAdapter.STRING.encodedSizeWithTag(1, value.name) +
        OneofOptions.ADAPTER.encodedSizeWithTag(2, value.options) +
        value.unknownFields.size

      override fun encode(writer: ProtoWriter, value: OneofDescriptorProto) {
        ProtoAdapter.STRING.encodeWithTag(writer, 1, value.name)
        OneofOptions.ADAPTER.encodeWithTag(writer, 2, value.options)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): OneofDescriptorProto {
        var name: String? = null
        var options: OneofOptions? = null
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> name = ProtoAdapter.STRING.decode(reader)
            2 -> options = OneofOptions.ADAPTER.decode(reader)
            else -> TagHandler.UNKNOWN_TAG
          }
        }
        return OneofDescriptorProto(
          name = name,
          options = options,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: OneofDescriptorProto): OneofDescriptorProto? = value.copy(
        options = value.options?.let(OneofOptions.ADAPTER::redact),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    val CREATOR: Parcelable.Creator<OneofDescriptorProto> = AndroidMessage.newCreator(ADAPTER)
  }
}
