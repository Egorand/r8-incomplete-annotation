// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: google/protobuf/descriptor.proto
package com.google.protobuf

import android.os.Parcelable
import com.squareup.wire.AndroidMessage
import com.squareup.wire.FieldEncoding
import com.squareup.wire.Message
import com.squareup.wire.ProtoAdapter
import com.squareup.wire.ProtoReader
import com.squareup.wire.ProtoWriter
import com.squareup.wire.WireField
import com.squareup.wire.internal.checkElementsNotNull
import com.squareup.wire.internal.redactElements
import kotlin.Int
import kotlin.collections.List
import kotlin.jvm.JvmField
import okio.ByteString

/**
 * The protocol compiler can output a FileDescriptorSet containing the .proto
 * files it parses.
 */
data class FileDescriptorSet(
  @field:WireField(
    tag = 1,
    adapter = "com.google.protobuf.FileDescriptorProto#ADAPTER",
    label = WireField.Label.REPEATED
  )
  @JvmField
  val file: List<FileDescriptorProto> = emptyList(),
  val unknownFields: ByteString = ByteString.EMPTY
) : AndroidMessage<FileDescriptorSet, FileDescriptorSet.Builder>(ADAPTER, unknownFields) {
  override fun newBuilder(): Builder {
    val builder = Builder()
    builder.file = file
    builder.addUnknownFields(unknownFields())
    return builder
  }

  class Builder : Message.Builder<FileDescriptorSet, Builder>() {
    @JvmField
    var file: List<FileDescriptorProto> = emptyList()

    fun file(file: List<FileDescriptorProto>): Builder {
      checkElementsNotNull(file)
      this.file = file
      return this
    }

    override fun build(): FileDescriptorSet = FileDescriptorSet(
      file = file,
      unknownFields = buildUnknownFields()
    )
  }

  companion object {
    @JvmField
    val ADAPTER: ProtoAdapter<FileDescriptorSet> = object : ProtoAdapter<FileDescriptorSet>(
      FieldEncoding.LENGTH_DELIMITED, 
      FileDescriptorSet::class
    ) {
      override fun encodedSize(value: FileDescriptorSet): Int = 
        FileDescriptorProto.ADAPTER.asRepeated().encodedSizeWithTag(1, value.file) +
        value.unknownFields.size

      override fun encode(writer: ProtoWriter, value: FileDescriptorSet) {
        FileDescriptorProto.ADAPTER.asRepeated().encodeWithTag(writer, 1, value.file)
        writer.writeBytes(value.unknownFields)
      }

      override fun decode(reader: ProtoReader): FileDescriptorSet {
        val file = mutableListOf<FileDescriptorProto>()
        val unknownFields = reader.forEachTag { tag ->
          when (tag) {
            1 -> file.add(FileDescriptorProto.ADAPTER.decode(reader))
            else -> reader.readUnknownField(tag)
          }
        }
        return FileDescriptorSet(
          file = file,
          unknownFields = unknownFields
        )
      }

      override fun redact(value: FileDescriptorSet): FileDescriptorSet = value.copy(
        file = value.file.redactElements(FileDescriptorProto.ADAPTER),
        unknownFields = ByteString.EMPTY
      )
    }

    @JvmField
    val CREATOR: Parcelable.Creator<FileDescriptorSet> = AndroidMessage.newCreator(ADAPTER)
  }
}
